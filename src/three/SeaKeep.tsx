/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Author: Artjoms Horosilovs (https://sketchfab.com/Artjoms_Horosilovs)
License: CC-BY-NC-SA-4.0 (http://creativecommons.org/licenses/by-nc-sa/4.0/)
Source: https://sketchfab.com/3d-models/sea-keep-lonely-watcher-09a15a0c14cb4accaf060a92bc70413d
Title: Sea Keep "Lonely Watcher"
*/

import React, { useRef } from "react";
import { useGLTF } from "@react-three/drei";
import { GroupProps } from "@react-three/fiber";
import { GLTF } from "three/examples/jsm/loaders/GLTFLoader";
import { Material, Mesh } from "three";
import { useGLB } from "@libs/hooks";
import { GLBResult } from "@libs/types";

interface SeakeepModel {
  nodes: {
    Fortress_Fortress_0: Mesh;
    Fortress_Fortress_0_1: Mesh;
    Fortress_Fortress_0_2: Mesh;
    Fortress_Environment_0: Mesh;
    Fortress_Sand_0: Mesh;
    Sea_Sea_0: Mesh;
    Sky_Sky_0: Mesh;
  };
  materials: {
    Fortress: Material;
    Environment: Material;
    Sand: Material;
    material: Material;
    material_4: Material;
  };
}

export function SeaKeap(props: GroupProps) {
  const { nodes, materials } = useGLB<GLBResult<SeakeepModel>>(
    "/sea_keep_lonely_watcher.glb"
  );

  return (
    <group {...props} dispose={null}>
      <group
        position={[17.117, 218.356, 23.591]}
        rotation={[-Math.PI / 2, 0, Math.PI]}
      >
        <group position={[33.745, 38.713, -60.289]}>
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Fortress_Fortress_0.geometry}
            material={materials.Fortress}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Fortress_Fortress_0_1.geometry}
            material={materials.Fortress}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Fortress_Fortress_0_2.geometry}
            material={materials.Fortress}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Fortress_Environment_0.geometry}
            material={materials.Environment}
          />
          <mesh
            castShadow
            receiveShadow
            geometry={nodes.Fortress_Sand_0.geometry}
            material={materials.Sand}
          />
        </group>
      </group>
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Sea_Sea_0.geometry}
        material={materials.material}
        position={[-1.388, 326.224, 14.92]}
        rotation={[-Math.PI / 2, 0, 0]}
      />
      <mesh
        castShadow
        receiveShadow
        geometry={nodes.Sky_Sky_0.geometry}
        material={materials.material_4}
        rotation={[-Math.PI / 2, 0, 0]}
      />
    </group>
  );
}

useGLTF.preload("/seakeep.glb");
